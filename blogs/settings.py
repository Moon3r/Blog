# -*- coding: utf-8 -*-

"""
Django settings for blogs project.

Generated by 'django-admin startproject' using Django 1.8.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'o$)wplsjcxmf+hzju0ejm4sj34=+1@mzo6fad_@yp31=6(x@&k'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'blogs.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
	    ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'blog.views.global_setting',
            ],
        },
    },
]

WSGI_APPLICATION = 'blogs.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'blogdb',
        'USER': 'root',
        'PASSWORD': 'root',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'zh-cn'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

MEDIA_URL = '/uploads/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'uploads')

# 自定义用户model
AUTH_USER_MODEL = 'blog.User'

# 网站的基本信息配置
SITE_NAME = 'MoR03r\'s Blog'

# 自定义日志输出信息
LOGGING = {
    'version' : 1,
    'disable_existing_loggers' : True,
    'formatters' : {
        'standard' : {
            'format' : '%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] [%(levelname)s]-%(message)s'
        }
    },
    'filters' : {

    },
    'handlers' : {
        'mail_admins' : {
            'level' : 'ERROR',
            'class' : 'django.utils.log.AdminEmailHandler',
            'include_html' : True,
        },
        'default' : {
            'level' : 'DEBUG',
            'class' : 'logging.handlers.RotatingFileHandler',
            'filename' : 'log/all.log',     #日志输出文件
            'maxBytes' : 1024*1024*5,       #文件大小
            'backupCount' : 5,              #备份份数
            'formatter' : 'standard',       #使用哪种formatters日志格式
        },
        'error' : {
            'level' : 'ERROR',
            'class' : 'logging.handlers.RotatingFileHandler',
            'filename' : 'log/error.log',
            'maxBytes' : 1024*1024*5,
            'backupCount' : 5,
            'formatter' : 'standard',
        },
        'console' : {
            'level' : 'DEBUG',
            'class' : 'logging.StreamHandler',
            'formatter' : 'standard'
        },
        'request_handlers' : {
            'level' : 'DEBUG',
            'class' : 'logging.handlers.RotatingFileHandler',
            'filename' : 'log/script.log',
            'maxBytes' : 1024*1024*5,
            'backupCount' : 5,
            'formatter' : 'standard',
        },
        'scripts_handler' : {
            'level' : 'DEBUG',
            'class' : 'logging.handlers.RotatingFileHandler',
            'filename' : 'log/script.log',
        }
    },
    'loggers' : {
        'django' : {
            'handlers' : ['default', 'console'],
            'level' : 'DEBUG',
            'propagate' : False
        },
        'django.request' : {
            'handlers' : ['request_handlers'],
            'level' : 'DEBUG',
            'propagate' : False,
        },
        'scripts' : {
            'handlers' : ['scripts_handler'],
            'level' : 'INFO',
            'propagate' : False
        },
        'blog.views' : {
            'handlers' : ['default', 'error'],
            'level' : 'DEBUG',
            'propagate' : True
        },
    }
}